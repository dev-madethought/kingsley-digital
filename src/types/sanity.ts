/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Legal = {
  _type: "legal";
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  body?: Array<{
    _key: string;
  } & InternationalizedArrayBlockContentValue>;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  socialLinks?: Array<{
    label?: string;
    url?: string;
    _key: string;
  }>;
  links?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "page";
  }>;
  newsletterTitle?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  newsletterPlaceholder?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  newsletterAgreement?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  cookiesMessage?: Array<{
    _key: string;
  } & InternationalizedArrayBlockContentValue>;
  contactsTitle?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsDescription?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsName?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsPhone?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsOrganisation?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsEmail?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsSubject?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsSubjects?: Array<{
    label?: Array<{
      _key: string;
    } & InternationalizedArrayStringValue>;
    _key: string;
  }>;
  contactsMessage?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsSubscribe?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  contactsSuccess?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsReadBio?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsEmail?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsLinkedIn?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsGotIt?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsLearnMore?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsContactUs?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsMap?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  buttonsSubmit?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
};

export type Services = {
  _type: "services";
  menu?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  allServices?: Array<{
    _key: string;
  } & Service>;
};

export type Service = {
  _type: "service";
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  sinopsis?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayBlockContentValue>;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
};

export type Philosophy = {
  _type: "philosophy";
  menu?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    title?: Array<{
      _key: string;
    } & InternationalizedArrayStringValue>;
    description?: Array<{
      _key: string;
    } & InternationalizedArrayStringValue>;
    _key: string;
  }>;
};

export type Person = {
  _type: "person";
  name?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  role?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  email?: string;
  phone?: string;
  linkedin?: string;
  bio?: Array<{
    _key: string;
  } & InternationalizedArrayBlockContentValue>;
};

export type People = {
  _type: "people";
  menu?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  people?: Array<{
    _key: string;
  } & Person>;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  content?: Array<({
    _key: string;
  } & Hero) | ({
    _key: string;
  } & Philosophy) | ({
    _key: string;
  } & People) | ({
    _key: string;
  } & Services) | ({
    _key: string;
  } & Contacts) | ({
    _key: string;
  } & Legal)>;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Hero = {
  _type: "hero";
  greeting?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  sentence?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayBlockContentValue>;
};

export type Contacts = {
  _type: "contacts";
  menu?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  address?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  gps?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  links?: Array<{
    label?: Array<{
      _key: string;
    } & InternationalizedArrayStringValue>;
    email?: string;
    _key: string;
  }>;
  numbers?: Array<{
    label?: Array<{
      _key: string;
    } & InternationalizedArrayStringValue>;
    phone?: string;
    _key: string;
  }>;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type InternationalizedArrayBlockContentValue = {
  _type: "internationalizedArrayBlockContentValue";
  value?: BlockContent;
};

export type InternationalizedArrayStringValue = {
  _type: "internationalizedArrayStringValue";
  value?: string;
};

export type InternationalizedArrayBlockContent = Array<{
  _key: string;
} & InternationalizedArrayBlockContentValue>;

export type InternationalizedArrayString = Array<{
  _key: string;
} & InternationalizedArrayStringValue>;
export declare const internalGroqTypeReferenceTo: unique symbol;

// Source: src/pages/[[...slug]].tsx
// Variable: pageQuery
// Query: *[_type == "page" && slug.current == $slug]
export type PageQueryResult = Array<{
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  content?: Array<({
    _key: string;
  } & Contacts) | ({
    _key: string;
  } & Hero) | ({
    _key: string;
  } & Legal) | ({
    _key: string;
  } & People) | ({
    _key: string;
  } & Philosophy) | ({
    _key: string;
  } & Services)>;
}>;

// Source: src/state/reducers/global.ts
// Variable: settingsQuery
// Query: *[_type == "settings"]{    "links": links[]->{_id,title, slug},    socialLinks,    "newsletter": {      "title": newsletterTitle,      "agreement": newsletterAgreement,      "placeholder": newsletterPlaceholder,    },    "cookies":{      "message": cookiesMessage,    },    "contacts": {      "title": contactsTitle,      "description": contactsDescription,      "name": contactsName,      "phone": contactsPhone,      "organisation": contactsOrganisation,      "email": contactsEmail,      "subject": contactsSubject,      "subjects": contactsSubjects,      "message": contactsMessage,      "subscribe": contactsSubscribe,      "success": contactsSuccess    },    "buttons": {      "biography": buttonsReadBio,      "email": buttonsEmail,      "linkedin": buttonsLinkedIn,      "gotit": buttonsGotIt,      "learnmore": buttonsLearnMore,      "contactus": buttonsContactUs,      "map": buttonsMap,      "submit": buttonsSubmit    }  }
export type SettingsQueryResult = Array<{
  links: Array<{
    _id: string;
    title: string | null;
    slug: Slug | null;
  }> | null;
  socialLinks: Array<{
    label?: string;
    url?: string;
    _key: string;
  }> | null;
  newsletter: {
    title: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    agreement: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    placeholder: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
  };
  cookies: {
    message: Array<{
      _key: string;
    } & InternationalizedArrayBlockContentValue> | null;
  };
  contacts: {
    title: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    description: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    name: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    phone: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    organisation: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    email: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    subject: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    subjects: Array<{
      label?: Array<{
        _key: string;
      } & InternationalizedArrayStringValue>;
      _key: string;
    }> | null;
    message: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    subscribe: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    success: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
  };
  buttons: {
    biography: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    email: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    linkedin: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    gotit: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    learnmore: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    contactus: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    map: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
    submit: Array<{
      _key: string;
    } & InternationalizedArrayStringValue> | null;
  };
}>;
// Variable: menuQuery
// Query: *[_type == "page" && title == "Homepage"] {    "content": content[!(_type == "hero" && !defined(menu))] {      _type,      menu    }  }  
export type MenuQueryResult = Array<{
  content: Array<null>;
}>;

